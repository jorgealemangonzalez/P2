/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package principal;

import java.util.LinkedList;

/**
 *
 * @author drako9
 */
public class MyMap extends javax.swing.JPanel {

    /**
     * Creates new form MyMap
     */
    private LinkedList< City > cities;
    private LinkedList< Point > puntos;
    private LinkedList< Country > countries;
    private LinkedList< Continent > continents;
    private World world;
    public MyMap() {
        initComponents();
        setSize( 500, 500 );
        cities = new LinkedList< City >();
        cities.add( new City( 10, 10, "A1", 4000000 ) );
        cities.add( new City( 10, 30, "A2", 2000000 ) );
        cities.add( new City( 30, 30, "A3", 2000000 ) );
        cities.add( new City( 30, 10, "A4", 2000000 ) );
        
        cities.add( new City( 50, 10, "B1", 4000000 ) );
        cities.add( new City( 50, 30, "B2", 2000000 ) );
        cities.add( new City( 70, 30, "B3", 2000000 ) );
        cities.add( new City( 70, 10, "B4", 2000000 ) );
        
        
        cities.add( new City( 100, 100, "C1", 4000000 ) );
        cities.add( new City( 100, 120, "C2", 2000000 ) );
        cities.add( new City( 120, 120, "C3", 2000000 ) );
        cities.add( new City( 120, 100, "C4", 2000000 ) );
        
        cities.add( new City( 150, 150, "D1", 4000000 ) );
        cities.add( new City( 150, 170, "D2", 2000000 ) );
        cities.add( new City( 170, 170, "D3", 2000000 ) );
        cities.add( new City( 170, 150, "D4", 2000000 ) );
        
        
        puntos = new LinkedList< >();
        for(int i = 0 ; i < cities.size(); ++i)
        {
            puntos.add((Point)cities.get(i));
        }
        
        countries = new LinkedList<>();
        for(int i = 1 ; i <= 4 ; ++i)
        {
            //en la siguiente linea introducimos los perimetros de los countries y la capital
            countries.add(new Country(new LinkedList<>(puntos.subList((i-1)*4,i*4)),cities.get(i*4-1)));
            //ahora introducimos las ciudades
            for(int j = 0 ; j < 4 ; ++j)
            {
                countries.get(i-1).addCity(cities.get((i-1)*4+j));
            }
        }
        continents = new LinkedList<>();
        for(int i = 0 ; i < 2 ; ++i)
        {
            continents.add(new Continent());
            continents.get(i).addCountry(countries.get(i*2));
            continents.get(i).addCountry(countries.get(i*2+1));
        }
        world = new World();
        world.addContinent(continents.get(0));
        world.addContinent(continents.get(1));
        
    }
    private LinkedList< Point> points;
    private PolygonalRegion prova;
    
    
    public void paint( java.awt.Graphics g ) {
        super.paint( g );
        /* Impresion de las ciudades por separado
        for(int i = 0 ; i < cities.size() ; ++i)
        {
            cities.get(i).draw(g);
        }*/
        /* Impresion de los countries con sus ciudades y perimetro
        for(int i = 0 ; i < countries.size() ; ++i)
        {
            countries.get(i).draw(g);
        }*/
        /* Impresion de los continentes y sus paises
        for(int i = 0 ; i < continents.size(); ++i)
        {
            continents.get(i).draw(g);
        }*/
        world.draw(g);
    }
   
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
